class Solution {
public:
    vector<int> findXSum(vector<int>& nums, int k, int x) {
        int n = nums.size();
        vector<int> answer;
        
        for (int i = 0; i <= n - k; ++i) {
            unordered_map<int, int> freq;
            for (int j = i; j < i + k; ++j) {
                freq[nums[j]]++;
            }
            
            vector<pair<int, int>> freqPairs;
            for (auto& p : freq) {
                freqPairs.push_back({p.second, p.first});
            }
            
            sort(freqPairs.begin(), freqPairs.end(), 
                 [](const pair<int, int>& a, const pair<int, int>& b) {
                     return a.first > b.first || (a.first == b.first && a.second > b.second);
                 });
            
            int xSum = 0;
            for (int j = 0; j < min(x, (int)freqPairs.size()); ++j) {
                xSum += freqPairs[j].first * freqPairs[j].second;
            }
            
            answer.push_back(xSum);
        }
        
        return answer;
    }
};
