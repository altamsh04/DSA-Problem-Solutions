class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> uMap;        
        vector<int> res;

        for (const auto& num : nums) {
            uMap[num]++;
        }

        vector<vector<int>> buckets(nums.size() + 1);
        for (const auto& pair : uMap) {
            buckets[pair.second].push_back(pair.first);
        }

        for (int i = buckets.size() - 1; i >= 0 && k > 0; --i) {
            for (const auto& num : buckets[i]) {
                res.push_back(num);
                if (--k == 0) {
                    break;
                }
            }
        }

        return res;
    }
};
